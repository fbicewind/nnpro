<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-4.1.xsd ">

	<!-- Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式. -->
	<http auto-config="true" use-expressions="true">
		<access-denied-handler error-page="/toIndex" />
		<intercept-url pattern="/register" access="isAnonymous()" />
		<intercept-url pattern="/lt/**" access="isAnonymous()" />
		<intercept-url pattern="/blogDo/*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/blog/mark" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/aboutMe/modifyPwd" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/aboutMe/modifyInfo" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/aboutMe/modifyAvatar" access="hasRole('ROLE_USER')" />
		<!-- <intercept-url pattern="/home/admin" access="hasRole('ROLE_ADMIN')" 
			/> -->
		<form-login login-page="/u/1" login-processing-url="/login"
			authentication-failure-url="/login/failure" default-target-url="/login/success"
			username-parameter="username" password-parameter="password" />
		<session-management
			session-authentication-error-url="/u/1" invalid-session-url="/u/1">
			<!-- max-sessions只容许一个账号登录，error-if-maximum-exceeded 后面账号登录后踢出前一个账号，expired-url 
				session过期跳转界面 -->
			<concurrency-control max-sessions="1"
				expired-url="/u/1" session-registry-ref="sessionRegistry" />
		</session-management>
		<!-- <remember-me key="elim" user-service-ref="userDetailsService"/> -->
		<logout invalidate-session="true" logout-success-url="/logout/exit"
			logout-url="/logout" delete-cookies="JSESSIONID" />
		<csrf disabled="true" />
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
		
		<remember-me remember-me-parameter="remember-me"
		remember-me-cookie="remember-me" token-validity-seconds="1209600"
		data-source-ref="dataSource" />
	</http>
	
	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<authentication-manager>
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<!-- 自定义userDetailsService -->
	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailService" />
		<beans:property name="passwordEncoder" ref="myPasswordEncode" />
	</beans:bean>

	<beans:bean id="userDetailService"
		class="cn.nnnight.security.CustomUserDetailServiceImpl" />

	<!-- Md5加密 -->
	<beans:bean id="myPasswordEncode" class="cn.nnnight.security.MyPasswordEncode" />

	<beans:bean id="csrfTokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<beans:property name="headerName" value="X-XSRF-TOKEN" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
		
</beans:beans>